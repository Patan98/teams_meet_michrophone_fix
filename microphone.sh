#!/bin/bash

#############################################################################################################################################################################
#███████ ██    ██ ███    ██  ██████ ████████ ██  ██████  ███    ██ ███████
#██      ██    ██ ████   ██ ██         ██    ██ ██    ██ ████   ██ ██
#█████   ██    ██ ██ ██  ██ ██         ██    ██ ██    ██ ██ ██  ██ ███████
#██      ██    ██ ██  ██ ██ ██         ██    ██ ██    ██ ██  ██ ██      ██
#██       ██████  ██   ████  ██████    ██    ██  ██████  ██   ████ ███████
#############################################################################################################################################################################
HELP() # SHOW HELP MESSAGE
{
    echo "This script changes the microphone volume in a loop to ensure that external applications do not interfere."
    echo
    echo "Options:"
    echo "-h --help            Show this help message"
    echo ""
    echo "-l --loop            The microphone changes volume in a loop every 0.1 seconds with the input volume"
    echo "                     Syntax ./microphone.sh 100"
    echo ""
}

LOOP()
{
    FULL=65536
    VOLUME=$1
    VALUE_TEMP=$(( 65500 / 100 ))
    VALUE=$(( VALUE_TEMP * VOLUME ))

    while true
    do
      pacmd set-source-volume alsa_input.pci-0000_00_1b.0.analog-stereo $VALUE
      sleep 0.1
    done
}
#############################################################################################################################################################################
#███    ███  █████  ██ ███    ██
#████  ████ ██   ██ ██ ████   ██
#██ ████ ██ ███████ ██ ██ ██  ██
#██  ██  ██ ██   ██ ██ ██  ██ ██
#██      ██ ██   ██ ██ ██   ████
#############################################################################################################################################################################
if [ ! -z "$1" ] && [ ! -z "$2" ] && [ -z "$3" ];
then
    case $1 in

    -h|--help)
        HELP
        ;;

    -l|--loop)
        LOOP $2
        ;;

    *)
        echo "Use -h or --help to get the list of valid options and know what the program does"
        ;;
    esac

else
    echo "Use -h or --help to get the list of valid options and know what the program does"
fi
#############################################################################################################################################################################
